version: "3.9"

services:
  server:
    build:
      context: .
      dockerfile: apps/server/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
    env_file:
      - .env
    volumes:
      - .:/app # code monorepo
      - server_node_modules:/app/node_modules # volume nommé pour node_modules
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "3000" ]
      interval: 10s
      timeout: 5s
      retries: 3

  pro:
    build:
      context: .
      dockerfile: apps/pro/Dockerfile
      target: development
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://server:3000
    command: [ "pnpm", "dev", "--port", "3000", "--hostname", "0.0.0.0" ]
    ports:
      - "3001:3000"
    volumes:
      - .:/app
      - pro_node_modules:/app/node_modules # volume nommé pour node_modules
    env_file:
      - .env
    depends_on:
      server:
        condition: service_healthy

  admin:
    build:
      context: .
      dockerfile: apps/admin/Dockerfile
      target: development
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://server:3000
    command: [ "pnpm", "dev", "--port", "3000", "--hostname", "0.0.0.0" ]
    volumes:
      - .:/app
      - admin_node_modules:/app/node_modules
    env_file:
      - .env
    depends_on:
      server:
        condition: service_healthy

volumes:
  server_node_modules: {}
  pro_node_modules: {}
  admin_node_modules: {}
